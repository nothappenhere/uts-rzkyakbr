name: Deploy My App

on:
  push:
    branches:
      - main # Trigger setiap push ke branch main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.PRIVATEKEY }}

      - name: Deploy and Build on EC2
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@18.141.194.211 << 'EOF'
            # Stop kalau ada error
            set -e

            # Pastikan directory ada
            sudo mkdir -p /var/www/mywebsite/runningCICD
            cd /var/www/mywebsite/runningCICD

            # Kalau belum ada .git berarti clone, kalau sudah pull
            if [ ! -d ".git" ]; then
              sudo git clone https://github.com/nothappenhere/uts-rzkyakbr.git .
            else
              sudo git pull origin main
            fi

            # Buat file .env baru
cat <<EOT > .env
AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
AWS_REGION=${AWS_REGION}
AWS_BUCKET=${AWS_BUCKET}

POSTGRES_HOST=${POSTGRES_HOST}
POSTGRES_USERNAME=${POSTGRES_USERNAME}
POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
POSTGRES_DATABASE=${POSTGRES_DATABASE}
EOT

            # Install dependency
            sudo npm install

            # Build project
            sudo npm run build

            # Deploy ke nginx
            sudo rm -rf /var/www/html/*
            sudo cp -r dist/* /var/www/html/

            # Restart nginx
            sudo systemctl restart nginx
          EOF
        env:
          SSH_PRIVATE_KEY: ${{ secrets.PRIVATEKEY }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_BUCKET: ${{ secrets.AWS_BUCKET }}
          POSTGRES_HOST: ${{ secrets.POSTGRES_HOST }}
          POSTGRES_USERNAME: ${{ secrets.POSTGRES_USERNAME }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DATABASE: ${{ secrets.POSTGRES_DATABASE }}
